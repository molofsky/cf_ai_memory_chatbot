{"version":3,"file":"schedule.js","names":[],"sources":["../src/schedule.ts"],"sourcesContent":["import { z } from \"zod\";\n\n/**\n * Get the schedule prompt for a given event\n * @param event - The event to get the schedule prompt for\n * @returns The schedule prompt\n */\nexport function getSchedulePrompt(event: { date: Date }) {\n  return `\n[Schedule Parser Component]\n\nCurrent time: ${event.date.toUTCString()}\n\nThis component parses natural language scheduling requests into a structured format. It extracts:\n1. A clean task description (without timing information)\n2. Scheduling details in one of these formats:\n   - scheduled: Specific date/time events\n   - delayed: Relative time delays (in seconds)\n   - cron: Recurring patterns\n   - no-schedule: Tasks without timing\n\nRules:\n- Task descriptions should be clean and focused on the action\n- Use numbers (0-6) for days in cron patterns (0=Sunday)\n- For recurring tasks, use standard cron syntax\n- For relative times, convert to seconds\n- For specific dates, use the current time as reference\n\nExample outputs:\n{\n  \"description\": \"meeting with team\",\n  \"when\": {\n    \"type\": \"scheduled\",\n    \"date\": \"tomorrow at 14:00\"\n  }\n}\n\n{\n  \"description\": \"backup database\",\n  \"when\": {\n    \"type\": \"cron\",\n    \"cron\": \"0 0 * * *\"\n  }\n}\n\n{\n  \"description\": \"send report\",\n  \"when\": {\n    \"type\": \"delayed\",\n    \"delayInSeconds\": 1800\n  }\n}\n\n[End Schedule Parser Component]\n`;\n}\n\nlet didWarnAboutUnstableGetSchedulePrompt = false;\n\n/**\n * @deprecated this has been renamed to getSchedulePrompt, and unstable_getSchedulePrompt will be removed in the next major version\n * @param event - The event to get the schedule prompt for\n * @returns The schedule prompt\n */\nexport function unstable_getSchedulePrompt(event: { date: Date }) {\n  if (!didWarnAboutUnstableGetSchedulePrompt) {\n    didWarnAboutUnstableGetSchedulePrompt = true;\n    console.warn(\n      \"unstable_getSchedulePrompt is deprecated, use getSchedulePrompt instead. unstable_getSchedulePrompt will be removed in the next major version.\"\n    );\n  }\n  return getSchedulePrompt(event);\n}\n\n/**\n * The schema for the schedule prompt\n */\nexport const scheduleSchema = z.object({\n  description: z.string().describe(\"A description of the task\"),\n  when: z.object({\n    cron: z\n      .string()\n      .optional()\n      .describe(\n        \"execute task on a recurring interval specified as cron syntax (only use if the type is cron)\"\n      ),\n    date: z.coerce\n      .date()\n      .optional()\n      .describe(\n        \"execute task at the specified date and time (only use if the type is scheduled)\"\n      ),\n    delayInSeconds: z\n      .number()\n      .optional()\n      .describe(\n        \"execute task after a delay in seconds (only use if the type is delayed)\"\n      ),\n    type: z\n      .enum([\"scheduled\", \"delayed\", \"cron\", \"no-schedule\"])\n      .describe(\"The type of scheduling details\")\n  })\n});\n\n/**\n * The type for the schedule prompt\n */\nexport type Schedule = z.infer<typeof scheduleSchema>;\n\n/**\n * @deprecated this has been renamed to scheduleSchema, and unstable_scheduleSchema will be removed in the next major version\n * @returns The schedule schema\n */\nexport const unstable_scheduleSchema = scheduleSchema;\n"],"mappings":";;;;;;;;AAOA,SAAgB,kBAAkB,OAAuB;AACvD,QAAO;;;gBAGO,MAAM,KAAK,aAAa,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CzC,IAAI,wCAAwC;;;;;;AAO5C,SAAgB,2BAA2B,OAAuB;AAChE,KAAI,CAAC,uCAAuC;AAC1C,0CAAwC;AACxC,UAAQ,KACN,iJACD;;AAEH,QAAO,kBAAkB,MAAM;;;;;AAMjC,MAAa,iBAAiB,EAAE,OAAO;CACrC,aAAa,EAAE,QAAQ,CAAC,SAAS,4BAA4B;CAC7D,MAAM,EAAE,OAAO;EACb,MAAM,EACH,QAAQ,CACR,UAAU,CACV,SACC,+FACD;EACH,MAAM,EAAE,OACL,MAAM,CACN,UAAU,CACV,SACC,kFACD;EACH,gBAAgB,EACb,QAAQ,CACR,UAAU,CACV,SACC,0EACD;EACH,MAAM,EACH,KAAK;GAAC;GAAa;GAAW;GAAQ;GAAc,CAAC,CACrD,SAAS,iCAAiC;EAC9C,CAAC;CACH,CAAC;;;;;AAWF,MAAa,0BAA0B"}